cmake_minimum_required(VERSION 3.5)
project(rclada_common VERSION 0.1.0)

message(STATUS " ")
message(STATUS "${PROJECT_NAME} version ${PROJECT_VERSION}")

if(BUILD_TESTING)
  # Silence a warning (?)
endif()

# Detect builder and compiler

find_program(GPRBUILD gprbuild)
if (NOT GPRBUILD)
  message(SEND_ERROR "gprbuild must be available in PATH")
endif()

find_program(GNAT gnat)
if (NOT GNAT)
  message(SEND_ERROR "gnat must be available in PATH")
endif()

# Initialize Ada paths

set(ADA_GPR_DIRS ${CMAKE_INSTALL_PREFIX}/share/gpr)
# Here we deploy projects that have manual sources
# Even if they include a "gen" folder autogenerated
# These have to ve developed in GPS using the real source folder

list(APPEND ADA_GPR_DIRS ${CMAKE_INSTALL_PREFIX}/share/gprimport)
# Here we deploy imported external libraries
# These projects can't be edited, but must be used while developing
# To avoid duplication of the manual/installed projects, we need to separate like this.

set(ADA_RESOURCE_DIR ${PROJECT_SOURCE_DIR}/resources)
# Templates used for generated files

# Include macros for Ada targets

include(cmake/ada_project.cmake)

# ada_begin_package()
# We do not need this since paths have been just initialized

# Generate some common C headers used by rosidl, rclada...
ada_generate_binding(
        ada_specs_common
        ${PROJECT_SOURCE_DIR}/gpr_c_builtins
        c_builtins.gpr
        ""
        /usr/include/${CMAKE_LIBRARY_ARCHITECTURE}/bits/stdint-intn.h
        /usr/include/${CMAKE_LIBRARY_ARCHITECTURE}/bits/stdint-uintn.h
        /usr/include/${CMAKE_LIBRARY_ARCHITECTURE}/bits/types.h)

# This is the common file that gets included by anyone depending of rclada_common package
install(FILES cmake/ada_project.cmake
        DESTINATION ${CMAKE_INSTALL_PREFIX}/share/${PROJECT_NAME}/cmake)

ada_end_package()

#get_cmake_property(_variableNames VARIABLES)
#list (SORT _variableNames)
#foreach (_variableName ${_variableNames})
#  message(STATUS "${_variableName}=${${_variableName}}")
#endforeach()